# Generated by Django 5.2.5 on 2025-08-11 06:27

import django.db.models.deletion
import users.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='SellerOwnerImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('image', models.ImageField(upload_to='seller/owners/')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='profiles/')),
                ('cover_image', models.ImageField(blank=True, null=True, upload_to='covers/')),
                ('first_name', models.CharField(blank=True, max_length=150)),
                ('last_name', models.CharField(blank=True, max_length=150)),
                ('phone_number', models.CharField(blank=True, max_length=20)),
                ('secondary_number', models.CharField(blank=True, max_length=20)),
                ('emergency_contact', models.CharField(blank=True, max_length=20)),
                ('address', models.TextField(blank=True)),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], max_length=10)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('national_id', models.CharField(blank=True, max_length=50)),
                ('role', models.CharField(choices=[('admin', 'Admin'), ('vendor', 'Vendor'), ('customer', 'Customer')], default='customer', max_length=20)),
                ('agree_to_terms', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('otp_code', models.CharField(blank=True, max_length=6, null=True)),
                ('otp_created_at', models.DateTimeField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', users.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='SellerApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('job_title', models.CharField(blank=True, max_length=150)),
                ('email', models.EmailField(max_length=254)),
                ('phone_number', models.CharField(max_length=20)),
                ('legal_business_name', models.CharField(max_length=255)),
                ('business_address', models.TextField()),
                ('country', models.CharField(max_length=100)),
                ('city_town', models.CharField(max_length=100)),
                ('state_province', models.CharField(blank=True, max_length=100)),
                ('postal_code', models.CharField(max_length=20)),
                ('established_date', models.DateField()),
                ('business_type', models.CharField(max_length=100)),
                ('taxpayer_number', models.CharField(blank=True, max_length=100)),
                ('trade_register_number', models.CharField(blank=True, max_length=100)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('archived', 'Archived')], default='pending', max_length=20)),
                ('nid_front', models.ImageField(upload_to='seller/nid/front/')),
                ('nid_back', models.ImageField(upload_to='seller/nid/back/')),
                ('home_localization_plan', models.FileField(blank=True, null=True, upload_to='seller/localization/home/')),
                ('business_localization_plan', models.FileField(blank=True, null=True, upload_to='seller/localization/business/')),
                ('taxpayer_doc', models.FileField(blank=True, null=True, upload_to='seller/taxpayer/')),
                ('trade_register_doc', models.FileField(blank=True, null=True, upload_to='seller/trade_register/')),
                ('verification_code', models.CharField(blank=True, max_length=10, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='seller_application', to=settings.AUTH_USER_MODEL)),
                ('owner_images', models.ManyToManyField(blank=True, to='users.sellerownerimage')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
