version: "3.9"

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: django_app_dev
    volumes:
      - .:/app  # Local code bind
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - db
      - redis

  db:
    image: postgres:15
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  redis:
    image: redis:7
    container_name: redis_server
    restart: always
    ports:
      - "6379:6379"

  celery:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: celery_worker
    command: celery -A main worker --loglevel=info --autoreload
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - redis
      - db

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: celery_beat
    command: celery -A main beat --loglevel=info --autoreload
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - redis
      - db

  daphne:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: daphne_server
    command: daphne -b 0.0.0.0 -p 8001 main.asgi:application
    ports:
      - "8001:8001"
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - redis
      - db

volumes:
  postgres_data:
  static_volume:
  media_volume:
